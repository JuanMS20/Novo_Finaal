{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nconst API_URL = 'http://localhost:8080/api';\nexport const authService = {\n  async login(email, password) {\n    const response = await fetch(`${API_URL}/login.php`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return response.json();\n  },\n  async register(username, email, password) {\n    const response = await fetch(`${API_URL}/register.php`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    });\n    return response.json();\n  }\n};\nexport const productService = {\n  async getFilteredProducts(filters = {}) {\n    const queryParams = new URLSearchParams();\n    if (filters.categories?.length) {\n      queryParams.append('category', filters.categories.join(','));\n    }\n    if (filters.conditions?.length) {\n      queryParams.append('condition', filters.conditions.join(','));\n    }\n    if (filters.minPrice) {\n      queryParams.append('minPrice', filters.minPrice);\n    }\n    if (filters.maxPrice) {\n      queryParams.append('maxPrice', filters.maxPrice);\n    }\n    const response = await fetch(`${API_URL}/products.php?${queryParams}`);\n    return response.json();\n  },\n  async createProduct(productData) {\n    const response = await fetch(`${API_URL}/products.php`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    return response.json();\n  },\n  async updateProduct(productData) {\n    const response = await fetch(`${API_URL}/products.php`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    return response.json();\n  },\n  async deleteProduct(id, userId) {\n    const response = await fetch(`${API_URL}/products.php`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        user_id: userId\n      })\n    });\n    return response.json();\n  }\n};\nexport const profileService = {\n  async getProfile(userId) {\n    const response = await fetch(`${API_URL}/profile.php?user_id=${userId}`);\n    return response.json();\n  },\n  async updateProfile(profileData) {\n    const response = await fetch(`${API_URL}/profile.php`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(profileData)\n    });\n    return response.json();\n  }\n};\nexport const uploadService = {\n  async uploadImage(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    const response = await fetch(`${API_URL}/upload.php`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","authService","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","register","username","productService","getFilteredProducts","filters","queryParams","URLSearchParams","categories","length","append","join","conditions","minPrice","maxPrice","createProduct","productData","updateProduct","deleteProduct","id","userId","user_id","profileService","getProfile","updateProfile","profileData","uploadService","uploadImage","file","formData","FormData"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/api';\r\n\r\nexport const authService = {\r\n    async login(email, password) {\r\n        const response = await fetch(`${API_URL}/login.php`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n        return response.json();\r\n    },\r\n\r\n    async register(username, email, password) {\r\n        const response = await fetch(`${API_URL}/register.php`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, email, password }),\r\n        });\r\n        return response.json();\r\n    }\r\n};\r\n\r\nexport const productService = {\r\n    async getFilteredProducts(filters = {}) {\r\n        const queryParams = new URLSearchParams();\r\n        \r\n        if (filters.categories?.length) {\r\n            queryParams.append('category', filters.categories.join(','));\r\n        }\r\n        if (filters.conditions?.length) {\r\n            queryParams.append('condition', filters.conditions.join(','));\r\n        }\r\n        if (filters.minPrice) {\r\n            queryParams.append('minPrice', filters.minPrice);\r\n        }\r\n        if (filters.maxPrice) {\r\n            queryParams.append('maxPrice', filters.maxPrice);\r\n        }\r\n\r\n        const response = await fetch(`${API_URL}/products.php?${queryParams}`);\r\n        return response.json();\r\n    },\r\n\r\n    async createProduct(productData) {\r\n        const response = await fetch(`${API_URL}/products.php`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(productData),\r\n        });\r\n        return response.json();\r\n    },\r\n\r\n    async updateProduct(productData) {\r\n        const response = await fetch(`${API_URL}/products.php`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(productData),\r\n        });\r\n        return response.json();\r\n    },\r\n\r\n    async deleteProduct(id, userId) {\r\n        const response = await fetch(`${API_URL}/products.php`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ id, user_id: userId }),\r\n        });\r\n        return response.json();\r\n    }\r\n};\r\n\r\nexport const profileService = {\r\n    async getProfile(userId) {\r\n        const response = await fetch(`${API_URL}/profile.php?user_id=${userId}`);\r\n        return response.json();\r\n    },\r\n\r\n    async updateProfile(profileData) {\r\n        const response = await fetch(`${API_URL}/profile.php`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(profileData),\r\n        });\r\n        return response.json();\r\n    }\r\n};\r\n\r\nexport const uploadService = {\r\n    async uploadImage(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        const response = await fetch(`${API_URL}/upload.php`, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n        return response.json();\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}