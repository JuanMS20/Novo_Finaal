{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nconst API_URL = 'http://localhost:8080';\nexport const authService = {\n  async login(email, password) {\n    try {\n      console.log('Intentando login con:', {\n        email\n      });\n      const response = await fetch(`${API_URL}/api/login.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('Respuesta del servidor:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Error en la respuesta del servidor');\n      }\n\n      // Si el login es exitoso, guardamos el usuario en localStorage\n      if (data.user) {\n        localStorage.setItem('currentUser', JSON.stringify(data.user));\n      }\n      return data;\n    } catch (error) {\n      console.error('Error en login:', error);\n      throw error;\n    }\n  },\n  async register(username, email, password) {\n    try {\n      console.log('Intentando registro con:', {\n        username,\n        email\n      });\n      const response = await fetch(`${API_URL}/api/register.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('Respuesta del servidor:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Error en el registro');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error en registro:', error);\n      throw error;\n    }\n  },\n  logout() {\n    localStorage.removeItem('currentUser');\n  },\n  getCurrentUser() {\n    const user = localStorage.getItem('currentUser');\n    return user ? JSON.parse(user) : null;\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem('currentUser');\n  }\n};\nexport const productService = {\n  async getProducts(filters = {}) {\n    try {\n      const queryParams = new URLSearchParams(filters).toString();\n      const response = await fetch(`${API_URL}/api/products.php?${queryParams}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al obtener productos');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error al obtener productos:', error);\n      throw error;\n    }\n  },\n  async createProduct(productData) {\n    try {\n      const response = await fetch(`${API_URL}/api/products.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al crear producto');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error al crear producto:', error);\n      throw error;\n    }\n  },\n  async uploadImage(file) {\n    try {\n      const formData = new FormData();\n      formData.append('image', file);\n      const response = await fetch(`${API_URL}/api/upload.php`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al subir imagen');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error al subir imagen:', error);\n      throw error;\n    }\n  },\n  async getProductsByUser(userId) {\n    try {\n      const response = await fetch(`${API_URL}/api/products.php?user_id=${userId}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error al obtener productos del usuario');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error al obtener productos del usuario:', error);\n      throw error;\n    }\n  },\n  async searchProducts(query) {\n    try {\n      const response = await fetch(`${API_URL}/api/products.php?search=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error en la búsqueda');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error en la búsqueda:', error);\n      throw error;\n    }\n  }\n};\nexport const profileService = {\n  async getProfile(userId) {\n    try {\n      const response = await fetch(`${API_URL}/api/profile.php?user_id=${userId}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener perfil');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al obtener perfil:', error);\n      throw error;\n    }\n  },\n  async updateProfile(profileData) {\n    try {\n      const response = await fetch(`${API_URL}/api/profile.php`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar perfil');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al actualizar perfil:', error);\n      throw error;\n    }\n  }\n};\nexport const uploadService = {\n  async uploadImage(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    const response = await fetch(`${API_URL}/upload.php`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","authService","login","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","user","localStorage","setItem","error","register","username","logout","removeItem","getCurrentUser","getItem","parse","isAuthenticated","productService","getProducts","filters","queryParams","URLSearchParams","toString","createProduct","productData","uploadImage","file","formData","FormData","append","getProductsByUser","userId","searchProducts","query","encodeURIComponent","profileService","getProfile","updateProfile","profileData","uploadService"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8080';\r\n\r\nexport const authService = {\r\n    async login(email, password) {\r\n        try {\r\n            console.log('Intentando login con:', { email });\r\n            const response = await fetch(`${API_URL}/api/login.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n            \r\n            const data = await response.json();\r\n            console.log('Respuesta del servidor:', data);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error en la respuesta del servidor');\r\n            }\r\n\r\n            // Si el login es exitoso, guardamos el usuario en localStorage\r\n            if (data.user) {\r\n                localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n            }\r\n\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error en login:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async register(username, email, password) {\r\n        try {\r\n            console.log('Intentando registro con:', { username, email });\r\n            const response = await fetch(`${API_URL}/api/register.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, email, password }),\r\n            });\r\n            \r\n            const data = await response.json();\r\n            console.log('Respuesta del servidor:', data);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error en el registro');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error en registro:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    logout() {\r\n        localStorage.removeItem('currentUser');\r\n    },\r\n\r\n    getCurrentUser() {\r\n        const user = localStorage.getItem('currentUser');\r\n        return user ? JSON.parse(user) : null;\r\n    },\r\n\r\n    isAuthenticated() {\r\n        return !!localStorage.getItem('currentUser');\r\n    }\r\n};\r\n\r\nexport const productService = {\r\n    async getProducts(filters = {}) {\r\n        try {\r\n            const queryParams = new URLSearchParams(filters).toString();\r\n            const response = await fetch(`${API_URL}/api/products.php?${queryParams}`);\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error al obtener productos');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error al obtener productos:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async createProduct(productData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/products.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(productData),\r\n            });\r\n            \r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error al crear producto');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error al crear producto:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async uploadImage(file) {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('image', file);\r\n\r\n            const response = await fetch(`${API_URL}/api/upload.php`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error al subir imagen');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error al subir imagen:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getProductsByUser(userId) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/products.php?user_id=${userId}`);\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error al obtener productos del usuario');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error al obtener productos del usuario:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async searchProducts(query) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/products.php?search=${encodeURIComponent(query)}`);\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Error en la búsqueda');\r\n            }\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error en la búsqueda:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport const profileService = {\r\n    async getProfile(userId) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/profile.php?user_id=${userId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Error al obtener perfil');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al obtener perfil:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async updateProfile(profileData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/profile.php`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(profileData),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Error al actualizar perfil');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al actualizar perfil:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport const uploadService = {\r\n    async uploadImage(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        const response = await fetch(`${API_URL}/upload.php`, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n        return response.json();\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}