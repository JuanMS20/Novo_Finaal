{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nconst API_URL = 'http://localhost:8080';\nexport const authService = {\n  async login(email, password) {\n    try {\n      const response = await fetch(`${API_URL}/api/login.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error en la respuesta del servidor');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error en login:', error);\n      throw error;\n    }\n  },\n  async register(username, email, password) {\n    try {\n      console.log('Enviando datos:', {\n        username,\n        email,\n        password\n      });\n      const response = await fetch(`${API_URL}/api/register.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Error en el registro');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error en registro:', error);\n      throw error;\n    }\n  }\n};\nexport const productService = {\n  async getFilteredProducts(filters = {}) {\n    try {\n      const queryParams = new URLSearchParams();\n      if (filters.categories?.length) {\n        queryParams.append('category', filters.categories.join(','));\n      }\n      if (filters.conditions?.length) {\n        queryParams.append('condition', filters.conditions.join(','));\n      }\n      if (filters.minPrice) {\n        queryParams.append('minPrice', filters.minPrice);\n      }\n      if (filters.maxPrice) {\n        queryParams.append('maxPrice', filters.maxPrice);\n      }\n      const response = await fetch(`${API_URL}/api/products.php?${queryParams}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener productos');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al obtener productos:', error);\n      throw error;\n    }\n  },\n  async createProduct(productData) {\n    try {\n      const response = await fetch(`${API_URL}/api/products.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productData)\n      });\n      if (!response.ok) {\n        throw new Error('Error al crear producto');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al crear producto:', error);\n      throw error;\n    }\n  }\n};\nexport const profileService = {\n  async getProfile(userId) {\n    try {\n      const response = await fetch(`${API_URL}/api/profile.php?user_id=${userId}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener perfil');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al obtener perfil:', error);\n      throw error;\n    }\n  },\n  async updateProfile(profileData) {\n    try {\n      const response = await fetch(`${API_URL}/api/profile.php`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar perfil');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error al actualizar perfil:', error);\n      throw error;\n    }\n  }\n};\nexport const uploadService = {\n  async uploadImage(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    const response = await fetch(`${API_URL}/upload.php`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","authService","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","register","username","log","errorData","message","productService","getFilteredProducts","filters","queryParams","URLSearchParams","categories","length","append","join","conditions","minPrice","maxPrice","createProduct","productData","profileService","getProfile","userId","updateProfile","profileData","uploadService","uploadImage","file","formData","FormData"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8080';\r\n\r\nexport const authService = {\r\n    async login(email, password) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/login.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Error en la respuesta del servidor');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error en login:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async register(username, email, password) {\r\n        try {\r\n            console.log('Enviando datos:', { username, email, password });\r\n            const response = await fetch(`${API_URL}/api/register.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, email, password }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Error en el registro');\r\n            }\r\n            \r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error en registro:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport const productService = {\r\n    async getFilteredProducts(filters = {}) {\r\n        try {\r\n            const queryParams = new URLSearchParams();\r\n            \r\n            if (filters.categories?.length) {\r\n                queryParams.append('category', filters.categories.join(','));\r\n            }\r\n            if (filters.conditions?.length) {\r\n                queryParams.append('condition', filters.conditions.join(','));\r\n            }\r\n            if (filters.minPrice) {\r\n                queryParams.append('minPrice', filters.minPrice);\r\n            }\r\n            if (filters.maxPrice) {\r\n                queryParams.append('maxPrice', filters.maxPrice);\r\n            }\r\n\r\n            const response = await fetch(`${API_URL}/api/products.php?${queryParams}`);\r\n            if (!response.ok) {\r\n                throw new Error('Error al obtener productos');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al obtener productos:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async createProduct(productData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/products.php`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(productData),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Error al crear producto');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al crear producto:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport const profileService = {\r\n    async getProfile(userId) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/profile.php?user_id=${userId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Error al obtener perfil');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al obtener perfil:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async updateProfile(profileData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/api/profile.php`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(profileData),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Error al actualizar perfil');\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error al actualizar perfil:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport const uploadService = {\r\n    async uploadImage(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        const response = await fetch(`${API_URL}/upload.php`, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n        return response.json();\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}