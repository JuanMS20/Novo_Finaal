{"ast":null,"code":"import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/\",\n    component: () => import(\"../views/HomePage.vue\")\n  }, {\n    path: \"/regi\",\n    component: () => import(\"../views/RegistroPage.vue\")\n  }, {\n    path: \"/register\",\n    component: () => import(\"../views/RegisterPage.vue\")\n  }, {\n    path: \"/sign-in\",\n    component: () => import(\"../views/SignIn.vue\")\n  }, {\n    path: \"/principal\",\n    component: () => import(\"../views/PrincipalPage.vue\")\n  }, {\n    path: \"/feed\",\n    component: () => import(\"../views/FeedPage.vue\"),\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nconst getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const removeListener = onAuthStateChanged(getAuth(), user => {\n      removeListener();\n      resolve(user);\n    }, reject);\n  });\n};\nrouter.beforeEach(async (to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const user = await getCurrentUser(); // Ejecutar la función y esperar a que resuelva\n    if (user) {\n      next(); // Si el usuario está autenticado, permitir el acceso\n    } else {\n      alert(\"No tienes acceso\");\n      next(\"/sign-in\"); // Redirigir al usuario a la página de inicio de sesión\n    }\n  } else {\n    next(); // Si la ruta no requiere autenticación, permitir el acceso\n  }\n});\nexport default router;","map":{"version":3,"names":["getAuth","onAuthStateChanged","createRouter","createWebHistory","router","history","routes","path","component","meta","requiresAuth","getCurrentUser","Promise","resolve","reject","removeListener","user","beforeEach","to","from","next","matched","some","record","alert"],"sources":["C:/Users/jorda/OneDrive/Escritorio/novo-front/src/router/index.js"],"sourcesContent":["import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { createRouter, createWebHistory } from \"vue-router\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes : [\r\n        { path: \"/\", component: () => import(\"../views/HomePage.vue\")},\r\n        { path: \"/regi\", component: () => import(\"../views/RegistroPage.vue\")},\r\n        { path: \"/register\", component: () => import(\"../views/RegisterPage.vue\")},\r\n        { path: \"/sign-in\", component: () => import(\"../views/SignIn.vue\")},\r\n        { path: \"/principal\", component: () => import(\"../views/PrincipalPage.vue\")},\r\n        { \r\n            path: \"/feed\", \r\n            component: () => import(\"../views/FeedPage.vue\"),\r\n            meta: {\r\n                requiresAuth: true,\r\n            }\r\n        },\r\n    ],\r\n});\r\n\r\nconst getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const removeListener = onAuthStateChanged(\r\n            getAuth(),\r\n            (user) => {\r\n                removeListener();\r\n                resolve(user);\r\n            },\r\n\r\n            reject\r\n        );\r\n    });\r\n};\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n    if (to.matched.some((record) => record.meta.requiresAuth)) {\r\n        const user = await getCurrentUser();  // Ejecutar la función y esperar a que resuelva\r\n        if (user) {\r\n            next();  // Si el usuario está autenticado, permitir el acceso\r\n        } else {\r\n            alert(\"No tienes acceso\");\r\n            next(\"/sign-in\");  // Redirigir al usuario a la página de inicio de sesión\r\n        }\r\n    } else {\r\n        next();  // Si la ruta no requiere autenticación, permitir el acceso\r\n    }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,MAAMC,MAAM,GAAGF,YAAY,CAAC;EACxBG,OAAO,EAAEF,gBAAgB,CAAC,CAAC;EAC3BG,MAAM,EAAG,CACL;IAAEC,IAAI,EAAE,GAAG;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;EAAC,CAAC,EAC9D;IAAED,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EAAC,CAAC,EACtE;IAAED,IAAI,EAAE,WAAW;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EAAC,CAAC,EAC1E;IAAED,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB;EAAC,CAAC,EACnE;IAAED,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B;EAAC,CAAC,EAC5E;IACID,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;IAChDC,IAAI,EAAE;MACFC,YAAY,EAAE;IAClB;EACJ,CAAC;AAET,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,cAAc,GAAGd,kBAAkB,CACrCD,OAAO,CAAC,CAAC,EACRgB,IAAI,IAAK;MACND,cAAc,CAAC,CAAC;MAChBF,OAAO,CAACG,IAAI,CAAC;IACjB,CAAC,EAEDF,MACJ,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAEDV,MAAM,CAACa,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACxC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACd,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,MAAMM,IAAI,GAAG,MAAML,cAAc,CAAC,CAAC,CAAC,CAAE;IACtC,IAAIK,IAAI,EAAE;MACNI,IAAI,CAAC,CAAC,CAAC,CAAE;IACb,CAAC,MAAM;MACHI,KAAK,CAAC,kBAAkB,CAAC;MACzBJ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAE;IACvB;EACJ,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC,CAAC,CAAE;EACb;AACJ,CAAC,CAAC;AAEF,eAAehB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}