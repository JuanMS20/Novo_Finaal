{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nconst isLoggedIn = ref(false);\nlet auth;\nonMounted(() => {\n  auth = getAuth();\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      isLoggedIn.value = true;\n    } else {\n      isLoggedIn.value = false;\n    }\n  });\n});\nconst handleSignOut = () => {};","map":{"version":3,"names":["onMounted","ref","getAuth","onAuthStateChanged","signOut","isLoggedIn","auth","user","value","handleSignOut"],"sources":["C:\\Users\\jorda\\authfire\\src\\App.vue"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\"> Home </router-link>\n    <router-link to=\"/feed\"> Feed </router-link>\n    <router-link to=\"/register\"> Register </router-link>\n    <router-link to=\"/sign-in\"> Login </router-link>\n    <button @click=\"handleSignOut\" v-if=\"isLoggedIn\">Logout</button>\n  </nav>\n  <router-view />\n</template>\n\n<script>\n\nimport { onMounted, ref } from 'vue';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\n\nconst isLoggedIn = ref(false);\n\nlet auth;\nonMounted(() => {\n    auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if(user){\n        isLoggedIn.value = true;\n      } else {\n        isLoggedIn.value = false;\n      }\n    })\n})\n\nconst handleSignOut = () => {\n\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":"AAaA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,OAAM,QAAS,eAAe;AAEpE,MAAMC,UAAS,GAAIJ,GAAG,CAAC,KAAK,CAAC;AAE7B,IAAIK,IAAI;AACRN,SAAS,CAAC,MAAM;EACZM,IAAG,GAAIJ,OAAO,CAAC,CAAC;EAChBC,kBAAkB,CAACG,IAAI,EAAGC,IAAI,IAAK;IACjC,IAAGA,IAAI,EAAC;MACNF,UAAU,CAACG,KAAI,GAAI,IAAI;IACzB,OAAO;MACLH,UAAU,CAACG,KAAI,GAAI,KAAK;IAC1B;EACF,CAAC;AACL,CAAC;AAED,MAAMC,aAAY,GAAIA,CAAA,KAAM,CAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}