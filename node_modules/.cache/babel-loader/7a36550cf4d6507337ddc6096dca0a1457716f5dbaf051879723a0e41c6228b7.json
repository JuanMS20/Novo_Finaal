{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8090/api',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Interceptor para agregar el token a las peticiones\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar las respuestas y errores\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // El servidor respondió con un código de error\n    if (error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error.response.data);\n  } else if (error.request) {\n    // La petición fue hecha pero no se recibió respuesta\n    return Promise.reject({\n      message: 'No hay respuesta del servidor'\n    });\n  } else {\n    // Algo sucedió al configurar la petición\n    return Promise.reject({\n      message: 'Error al realizar la petición'\n    });\n  }\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","data","message"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/axios.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:8090/api',\r\n  timeout: 5000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n})\r\n\r\n// Interceptor para agregar el token a las peticiones\r\naxiosInstance.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Interceptor para manejar las respuestas y errores\r\naxiosInstance.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de error\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('token')\r\n        window.location.href = '/login'\r\n      }\r\n      return Promise.reject(error.response.data)\r\n    } else if (error.request) {\r\n      // La petición fue hecha pero no se recibió respuesta\r\n      return Promise.reject({ message: 'No hay respuesta del servidor' })\r\n    } else {\r\n      // Algo sucedió al configurar la petición\r\n      return Promise.reject({ message: 'Error al realizar la petición' })\r\n    }\r\n  }\r\n)\r\n\r\nexport default axiosInstance "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDI,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,aAAa,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CACrCQ,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;IACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAACG,QAAQ,CAACM,IAAI,CAAC;EAC5C,CAAC,MAAM,IAAIT,KAAK,CAACN,OAAO,EAAE;IACxB;IACA,OAAOO,OAAO,CAACC,MAAM,CAAC;MAAEQ,OAAO,EAAE;IAAgC,CAAC,CAAC;EACrE,CAAC,MAAM;IACL;IACA,OAAOT,OAAO,CAACC,MAAM,CAAC;MAAEQ,OAAO,EAAE;IAAgC,CAAC,CAAC;EACrE;AACF,CACF,CAAC;AAED,eAAetB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}