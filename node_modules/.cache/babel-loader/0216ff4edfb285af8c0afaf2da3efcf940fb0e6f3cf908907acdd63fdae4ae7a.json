{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nexport default {\n  __name: 'RegistroPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const formData = ref({\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const loading = ref(false);\n    const error = ref(null);\n    const validateForm = () => {\n      // Validar nombre completo\n      if (formData.value.fullName.trim().length < 3) {\n        throw new Error('El nombre debe tener al menos 3 caracteres');\n      }\n\n      // Validar email\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(formData.value.email)) {\n        throw new Error('El correo electrónico no es válido');\n      }\n\n      // Validar contraseña\n      if (formData.value.password.length < 6) {\n        throw new Error('La contraseña debe tener al menos 6 caracteres');\n      }\n\n      // Validar confirmación de contraseña\n      if (formData.value.password !== formData.value.confirmPassword) {\n        throw new Error('Las contraseñas no coinciden');\n      }\n    };\n    const handleRegister = async () => {\n      try {\n        error.value = null;\n        loading.value = true;\n\n        // Validar formulario\n        validateForm();\n\n        // Crear usuario en Firebase Auth\n        const userCredential = await createUserWithEmailAndPassword(auth, formData.value.email, formData.value.password);\n\n        // Actualizar el perfil del usuario\n        await updateProfile(userCredential.user, {\n          displayName: formData.value.fullName\n        });\n\n        // Guardar información adicional en Firestore\n        await setDoc(doc(db, 'users', userCredential.user.uid), {\n          fullName: formData.value.fullName,\n          email: formData.value.email,\n          createdAt: new Date(),\n          role: 'user'\n        });\n\n        // Redirigir al usuario\n        router.push('/app/principal');\n      } catch (err) {\n        console.error('Error en registro:', err);\n        if (err.code) {\n          error.value = getErrorMessage(err.code);\n        } else {\n          error.value = err.message;\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    const getErrorMessage = code => {\n      switch (code) {\n        case 'auth/email-already-in-use':\n          return 'Este correo electrónico ya está registrado';\n        case 'auth/invalid-email':\n          return 'El formato del correo electrónico no es válido';\n        case 'auth/operation-not-allowed':\n          return 'El registro con correo electrónico no está habilitado';\n        case 'auth/weak-password':\n          return 'La contraseña debe tener al menos 6 caracteres';\n        case 'auth/network-request-failed':\n          return 'Error de conexión. Verifica tu conexión a internet';\n        case 'auth/too-many-requests':\n          return 'Demasiados intentos fallidos. Intenta más tarde';\n        default:\n          return 'Ocurrió un error durante el registro. Por favor, intenta nuevamente';\n      }\n    };\n    const __returned__ = {\n      router,\n      formData,\n      loading,\n      error,\n      validateForm,\n      handleRegister,\n      getErrorMessage,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get createUserWithEmailAndPassword() {\n        return createUserWithEmailAndPassword;\n      },\n      get updateProfile() {\n        return updateProfile;\n      },\n      get doc() {\n        return doc;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get auth() {\n        return auth;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","createUserWithEmailAndPassword","updateProfile","doc","setDoc","auth","db","router","formData","fullName","email","password","confirmPassword","loading","error","validateForm","value","trim","length","Error","emailRegex","test","handleRegister","userCredential","user","displayName","uid","createdAt","Date","role","push","err","console","code","getErrorMessage","message"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/views/RegistroPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <div class=\"register-container\">\r\n      <h1>Registro</h1>\r\n      \r\n      <form @submit.prevent=\"handleRegister\" class=\"register-form\">\r\n        <div class=\"form-group\">\r\n          <label>Nombre completo</label>\r\n          <input \r\n            v-model=\"formData.fullName\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Ingresa tu nombre completo\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Correo electrónico</label>\r\n          <input \r\n            v-model=\"formData.email\"\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Ingresa tu correo electrónico\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Contraseña</label>\r\n          <input \r\n            v-model=\"formData.password\"\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Ingresa tu contraseña\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Confirmar contraseña</label>\r\n          <input \r\n            v-model=\"formData.confirmPassword\"\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Confirma tu contraseña\"\r\n          >\r\n        </div>\r\n\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          {{ error }}\r\n        </div>\r\n\r\n        <button type=\"submit\" :disabled=\"loading\" class=\"register-button\">\r\n          {{ loading ? 'Registrando...' : 'Registrarse' }}\r\n        </button>\r\n\r\n        <p class=\"login-link\">\r\n          ¿Ya tienes una cuenta? \r\n          <router-link to=\"/login\">Inicia sesión</router-link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'\r\nimport { doc, setDoc } from 'firebase/firestore'\r\nimport { auth, db } from '../firebase'\r\n\r\nconst router = useRouter()\r\n\r\nconst formData = ref({\r\n  fullName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst loading = ref(false)\r\nconst error = ref(null)\r\n\r\nconst validateForm = () => {\r\n  // Validar nombre completo\r\n  if (formData.value.fullName.trim().length < 3) {\r\n    throw new Error('El nombre debe tener al menos 3 caracteres')\r\n  }\r\n\r\n  // Validar email\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  if (!emailRegex.test(formData.value.email)) {\r\n    throw new Error('El correo electrónico no es válido')\r\n  }\r\n\r\n  // Validar contraseña\r\n  if (formData.value.password.length < 6) {\r\n    throw new Error('La contraseña debe tener al menos 6 caracteres')\r\n  }\r\n\r\n  // Validar confirmación de contraseña\r\n  if (formData.value.password !== formData.value.confirmPassword) {\r\n    throw new Error('Las contraseñas no coinciden')\r\n  }\r\n}\r\n\r\nconst handleRegister = async () => {\r\n  try {\r\n    error.value = null\r\n    loading.value = true\r\n\r\n    // Validar formulario\r\n    validateForm()\r\n\r\n    // Crear usuario en Firebase Auth\r\n    const userCredential = await createUserWithEmailAndPassword(\r\n      auth,\r\n      formData.value.email,\r\n      formData.value.password\r\n    )\r\n\r\n    // Actualizar el perfil del usuario\r\n    await updateProfile(userCredential.user, {\r\n      displayName: formData.value.fullName\r\n    })\r\n\r\n    // Guardar información adicional en Firestore\r\n    await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n      fullName: formData.value.fullName,\r\n      email: formData.value.email,\r\n      createdAt: new Date(),\r\n      role: 'user'\r\n    })\r\n\r\n    // Redirigir al usuario\r\n    router.push('/app/principal')\r\n  } catch (err) {\r\n    console.error('Error en registro:', err)\r\n    if (err.code) {\r\n      error.value = getErrorMessage(err.code)\r\n    } else {\r\n      error.value = err.message\r\n    }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst getErrorMessage = (code) => {\r\n  switch (code) {\r\n    case 'auth/email-already-in-use':\r\n      return 'Este correo electrónico ya está registrado'\r\n    case 'auth/invalid-email':\r\n      return 'El formato del correo electrónico no es válido'\r\n    case 'auth/operation-not-allowed':\r\n      return 'El registro con correo electrónico no está habilitado'\r\n    case 'auth/weak-password':\r\n      return 'La contraseña debe tener al menos 6 caracteres'\r\n    case 'auth/network-request-failed':\r\n      return 'Error de conexión. Verifica tu conexión a internet'\r\n    case 'auth/too-many-requests':\r\n      return 'Demasiados intentos fallidos. Intenta más tarde'\r\n    default:\r\n      return 'Ocurrió un error durante el registro. Por favor, intenta nuevamente'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-page {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f3f4f6;\r\n  padding: 2rem;\r\n}\r\n\r\n.register-container {\r\n  background-color: white;\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #1f2937;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #4b5563;\r\n  font-weight: 500;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n.form-group input:focus {\r\n  outline: none;\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);\r\n}\r\n\r\n.error-message {\r\n  color: #dc2626;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.register-button {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #2563eb;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0.375rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.register-button:hover:not(:disabled) {\r\n  background-color: #1d4ed8;\r\n}\r\n\r\n.register-button:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.login-link {\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  color: #6b7280;\r\n}\r\n\r\n.login-link a {\r\n  color: #2563eb;\r\n  text-decoration: none;\r\n}\r\n\r\n.login-link a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}