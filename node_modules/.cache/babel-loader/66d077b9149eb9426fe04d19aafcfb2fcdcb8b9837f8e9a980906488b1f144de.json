{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from '../main.js';\nimport { getAuth } from \"firebase/auth\"; // Importar autenticación de Firebase\n\nexport default {\n  __name: 'FeedPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const title = ref(\"\");\n    const description = ref(\"\");\n    const posts = ref([]);\n    const editingPost = ref(null); // Para saber si se está editando un post\n\n    // Función para enviar los datos\n    const submitData = async () => {\n      const auth = getAuth();\n      const user = auth.currentUser; // Obtener el usuario autenticado\n\n      if (!user) {\n        alert(\"Debes estar autenticado para enviar un post\");\n        return;\n      }\n      try {\n        if (editingPost.value) {\n          // Actualizar el post si se está editando\n          const postRef = doc(db, \"posts\", editingPost.value.id);\n          await updateDoc(postRef, {\n            title: title.value,\n            description: description.value\n          });\n          alert(\"Post actualizado correctamente\");\n        } else {\n          // Añadir nuevo post con el correo del usuario\n          await addDoc(collection(db, \"posts\"), {\n            title: title.value,\n            description: description.value,\n            createdAt: new Date(),\n            userEmail: user.email // Añadir el correo del usuario autenticado\n          });\n          alert(\"Datos enviados correctamente\");\n        }\n        title.value = \"\"; // Limpiar campos después de enviar\n        description.value = \"\";\n        editingPost.value = null; // Reiniciar la variable de edición\n        fetchPosts(); // Recargar los posts\n      } catch (e) {\n        console.error(\"Error al añadir o actualizar el documento: \", e);\n        alert(\"Hubo un error al enviar los datos\");\n      }\n    };\n\n    // Función para obtener los posts desde Firestore\n    const fetchPosts = async () => {\n      const querySnapshot = await getDocs(collection(db, \"posts\"));\n      posts.value = querySnapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n    };\n\n    // Función para editar un post\n    const editPost = post => {\n      title.value = post.title;\n      description.value = post.description;\n      editingPost.value = post;\n    };\n\n    // Función para eliminar un post\n    const deletePost = async id => {\n      const postRef = doc(db, \"posts\", id);\n      await deleteDoc(postRef);\n      alert(\"Post eliminado correctamente\");\n      fetchPosts(); // Recargar los posts\n    };\n\n    // Cargar los posts cuando el componente se monte\n    onMounted(() => {\n      fetchPosts();\n    });\n    const __returned__ = {\n      title,\n      description,\n      posts,\n      editingPost,\n      submitData,\n      fetchPosts,\n      editPost,\n      deletePost,\n      ref,\n      onMounted,\n      get collection() {\n        return collection;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get doc() {\n        return doc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get deleteDoc() {\n        return deleteDoc;\n      },\n      get db() {\n        return db;\n      },\n      get getAuth() {\n        return getAuth;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","collection","addDoc","getDocs","doc","updateDoc","deleteDoc","db","getAuth","title","description","posts","editingPost","submitData","auth","user","currentUser","alert","value","postRef","id","createdAt","Date","userEmail","email","fetchPosts","e","console","error","querySnapshot","docs","map","data","editPost","post","deletePost"],"sources":["C:/Users/jorda/authfire/src/views/FeedPage.vue"],"sourcesContent":["<template>\r\n  <div style=\"min-height: 100vh; background-color: #f9fafb; padding: 32px;\">\r\n    <div style=\"max-width: 768px; margin: 0 auto;\">\r\n      <h1 style=\"font-size: 24px; font-weight: 600; color: #111827; margin-bottom: 32px;\">Product Management</h1>\r\n\r\n      <div style=\"background-color: #ffffff; box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1); border-radius: 8px; padding: 24px; margin-bottom: 32px;\">\r\n        <h2 style=\"font-size: 18px; font-weight: 500; color: #111827; margin-bottom: 16px;\">{{ title ? 'Edit Product' : 'Add New Product' }}</h2>\r\n        <form @submit.prevent=\"submitData\" style=\"display: grid; grid-gap: 16px;\">\r\n          <div>\r\n            <label for=\"title\" style=\"font-size: 14px; font-weight: 500; color: #374151;\">Title</label>\r\n            <input\r\n              id=\"title\"\r\n              v-model=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter product title\"\r\n              style=\"margin-top: 8px; width: 100%; border: 1px solid #d1d5db; border-radius: 4px; padding: 8px;\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label for=\"description\" style=\"font-size: 14px; font-weight: 500; color: #374151;\">Description</label>\r\n            <input\r\n              id=\"description\"\r\n              v-model=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter product description\"\r\n              style=\"margin-top: 8px; width: 100%; border: 1px solid #d1d5db; border-radius: 4px; padding: 8px;\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              style=\"width: 100%; display: inline-flex; justify-content: center; padding: 10px; border: none; border-radius: 4px; background-color: #4f46e5; color: #ffffff; font-size: 14px; font-weight: 500; cursor: pointer;\"\r\n            >\r\n              {{ title ? 'Update Product' : 'Add Product' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"posts.length > 0\" style=\"background-color: #ffffff; box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1); border-radius: 8px;\">\r\n        <h2 style=\"display: none;\">Products</h2>\r\n        <ul style=\"list-style-type: none; padding: 0; margin: 0; border-top: 1px solid #e5e7eb;\">\r\n          <li v-for=\"post in posts\" :key=\"post.id\" style=\"padding: 16px; display: flex; justify-content: space-between; border-bottom: 1px solid #e5e7eb;\">\r\n            <div>\r\n              <h3 style=\"font-size: 18px; font-weight: 500; color: #111827;\">{{ post.title }}</h3>\r\n              <p style=\"font-size: 14px; color: #6b7280;\">{{ post.description }}</p>\r\n              <p style=\"font-size: 12px; color: #9ca3af;\">Created by: {{ post.userEmail }}</p>\r\n            </div>\r\n            <div style=\"display: flex; gap: 8px;\">\r\n              <button\r\n                @click=\"editPost(post)\"\r\n                style=\"background-color: transparent; color: #4f46e5; border: none; cursor: pointer; font-weight: 500;\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                @click=\"deletePost(post.id)\"\r\n                style=\"background-color: transparent; color: #ef4444; border: none; cursor: pointer; font-weight: 500;\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div v-else style=\"text-align: center; padding: 48px; background-color: #ffffff; box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1); border-radius: 8px;\">\r\n        <svg style=\"margin: 0 auto; height: 48px; width: 48px; color: #9ca3af;\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path vector-effect=\"non-scaling-stroke\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\r\n        </svg>\r\n        <h3 style=\"margin-top: 16px; font-size: 14px; font-weight: 500; color: #111827;\">No products</h3>\r\n        <p style=\"margin-top: 8px; font-size: 14px; color: #6b7280;\">Get started by creating a new product.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\nimport { db } from '../main.js';\r\nimport { getAuth } from \"firebase/auth\";  // Importar autenticación de Firebase\r\n\r\nconst title = ref(\"\");\r\nconst description = ref(\"\");\r\nconst posts = ref([]);\r\nconst editingPost = ref(null);  // Para saber si se está editando un post\r\n\r\n// Función para enviar los datos\r\nconst submitData = async () => {\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;  // Obtener el usuario autenticado\r\n\r\n  if (!user) {\r\n    alert(\"Debes estar autenticado para enviar un post\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    if (editingPost.value) {\r\n      // Actualizar el post si se está editando\r\n      const postRef = doc(db, \"posts\", editingPost.value.id);\r\n      await updateDoc(postRef, {\r\n        title: title.value,\r\n        description: description.value\r\n      });\r\n      alert(\"Post actualizado correctamente\");\r\n    } else {\r\n      // Añadir nuevo post con el correo del usuario\r\n      await addDoc(collection(db, \"posts\"), {\r\n        title: title.value,\r\n        description: description.value,\r\n        createdAt: new Date(),\r\n        userEmail: user.email  // Añadir el correo del usuario autenticado\r\n      });\r\n      alert(\"Datos enviados correctamente\");\r\n    }\r\n\r\n    title.value = \"\";  // Limpiar campos después de enviar\r\n    description.value = \"\";\r\n    editingPost.value = null;  // Reiniciar la variable de edición\r\n    fetchPosts();  // Recargar los posts\r\n  } catch (e) {\r\n    console.error(\"Error al añadir o actualizar el documento: \", e);\r\n    alert(\"Hubo un error al enviar los datos\");\r\n  }\r\n};\r\n\r\n// Función para obtener los posts desde Firestore\r\nconst fetchPosts = async () => {\r\n  const querySnapshot = await getDocs(collection(db, \"posts\"));\r\n  posts.value = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n};\r\n\r\n// Función para editar un post\r\nconst editPost = (post) => {\r\n  title.value = post.title;\r\n  description.value = post.description;\r\n  editingPost.value = post;\r\n};\r\n\r\n// Función para eliminar un post\r\nconst deletePost = async (id) => {\r\n  const postRef = doc(db, \"posts\", id);\r\n  await deleteDoc(postRef);\r\n  alert(\"Post eliminado correctamente\");\r\n  fetchPosts();  // Recargar los posts\r\n};\r\n\r\n// Cargar los posts cuando el componente se monte\r\nonMounted(() => {\r\n  fetchPosts();\r\n});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}