{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Formulario Feed\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitData, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.title = $event),\n    type: \"text\",\n    placeholder: \"Título\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.description = $event),\n    type: \"text\",\n    placeholder: \"Descripción\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.description]]), _cache[2] || (_cache[2] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Enviar\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Mostrar lista de posts \"), $setup.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Posts\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.description), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.editPost(post)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deletePost(post.id)\n    }, \"Eliminar\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","submitData","_cache","$event","title","type","placeholder","description","_createCommentVNode","posts","length","_hoisted_1","_Fragment","_renderList","post","id","_toDisplayString","onClick","editPost","_hoisted_2","deletePost","_hoisted_3"],"sources":["C:\\Users\\jorda\\authfire\\src\\views\\FeedPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Formulario Feed</h1>\r\n      <form @submit.prevent=\"submitData\">\r\n        <input v-model=\"title\" type=\"text\" placeholder=\"Título\" />\r\n        <input v-model=\"description\" type=\"text\" placeholder=\"Descripción\" />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n  \r\n      <!-- Mostrar lista de posts -->\r\n      <div v-if=\"posts.length > 0\">\r\n        <h2>Posts</h2>\r\n        <ul>\r\n          <li v-for=\"post in posts\" :key=\"post.id\">\r\n            <h3>{{ post.title }}</h3>\r\n            <p>{{ post.description }}</p>\r\n            <button @click=\"editPost(post)\">Editar</button>\r\n            <button @click=\"deletePost(post.id)\">Eliminar</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\n  import { db } from '../main.js';\r\n  \r\n  const title = ref(\"\");\r\n  const description = ref(\"\");\r\n  const posts = ref([]);\r\n  const editingPost = ref(null);  // Para saber si se está editando un post\r\n  \r\n  // Función para enviar los datos\r\n  const submitData = async () => {\r\n    try {\r\n      if (editingPost.value) {\r\n        // Actualizar el post si se está editando\r\n        const postRef = doc(db, \"posts\", editingPost.value.id);\r\n        await updateDoc(postRef, {\r\n          title: title.value,\r\n          description: description.value\r\n        });\r\n        alert(\"Post actualizado correctamente\");\r\n      } else {\r\n        // Añadir nuevo post\r\n        await addDoc(collection(db, \"posts\"), {\r\n          title: title.value,\r\n          description: description.value,\r\n          createdAt: new Date()\r\n        });\r\n        alert(\"Datos enviados correctamente\");\r\n      }\r\n  \r\n      title.value = \"\";  // Limpiar campos después de enviar\r\n      description.value = \"\";\r\n      editingPost.value = null;  // Reiniciar la variable de edición\r\n      fetchPosts();  // Recargar los posts\r\n    } catch (e) {\r\n      console.error(\"Error al añadir o actualizar el documento: \", e);\r\n      alert(\"Hubo un error al enviar los datos\");\r\n    }\r\n  };\r\n  \r\n  // Función para obtener los posts desde Firestore\r\n  const fetchPosts = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"posts\"));\r\n    posts.value = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n  };\r\n  \r\n  // Función para editar un post\r\n  const editPost = (post) => {\r\n    title.value = post.title;\r\n    description.value = post.description;\r\n    editingPost.value = post;\r\n  };\r\n  \r\n  // Función para eliminar un post\r\n  const deletePost = async (id) => {\r\n    const postRef = doc(db, \"posts\", id);\r\n    await deleteDoc(postRef);\r\n    alert(\"Post eliminado correctamente\");\r\n    fetchPosts();  // Recargar los posts\r\n  };\r\n  \r\n  // Cargar los posts cuando el componente se monte\r\n  onMounted(() => {\r\n    fetchPosts();\r\n  });\r\n  </script>\r\n  "],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;mBAAA;;uBACIC,mBAAA,CAoBM,c,0BAnBJC,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAIO;IAJAC,QAAM,EAHnBC,cAAA,CAG6BC,MAAA,CAAAC,UAAU;sBAC/BJ,mBAAA,CAA0D;IAJlE,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIwBH,MAAA,CAAAI,KAAK,GAAAD,MAAA;IAAEE,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;iDAA/BN,MAAA,CAAAI,KAAK,E,mBACrBP,mBAAA,CAAqE;IAL7E,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKwBH,MAAA,CAAAO,WAAW,GAAAJ,MAAA;IAAEE,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;iDAArCN,MAAA,CAAAO,WAAW,E,6BAC3BV,mBAAA,CAAqC;IAA7BQ,IAAI,EAAC;EAAQ,GAAC,QAAM,qB,4BAG9BG,mBAAA,4BAA+B,EACpBR,MAAA,CAAAS,KAAK,CAACC,MAAM,Q,cAAvBd,mBAAA,CAUM,OApBZe,UAAA,G,0BAWQd,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAOK,c,kBANHD,mBAAA,CAKKgB,SAAA,QAlBfC,WAAA,CAa6Bb,MAAA,CAAAS,KAAK,EAAbK,IAAI;yBAAflB,mBAAA,CAKK;MALsBD,GAAG,EAAEmB,IAAI,CAACC;QACnClB,mBAAA,CAAyB,YAAAmB,gBAAA,CAAlBF,IAAI,CAACV,KAAK,kBACjBP,mBAAA,CAA6B,WAAAmB,gBAAA,CAAvBF,IAAI,CAACP,WAAW,kBACtBV,mBAAA,CAA+C;MAAtCoB,OAAK,EAAAd,MAAA,IAAEH,MAAA,CAAAkB,QAAQ,CAACJ,IAAI;OAAG,QAAM,iBAhBlDK,UAAA,GAiBYtB,mBAAA,CAAsD;MAA7CoB,OAAK,EAAAd,MAAA,IAAEH,MAAA,CAAAoB,UAAU,CAACN,IAAI,CAACC,EAAE;OAAG,UAAQ,iBAjBzDM,UAAA,E;wCAAAb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}