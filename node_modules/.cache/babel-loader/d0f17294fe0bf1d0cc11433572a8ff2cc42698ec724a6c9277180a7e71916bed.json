{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../main.js';\nexport default {\n  __name: 'HomePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const posts = ref([]);\n    const selectedPost = ref(null);\n\n    // Función para obtener los posts desde Firestore\n    const fetchPosts = async () => {\n      const querySnapshot = await getDocs(collection(db, \"posts\"));\n      posts.value = querySnapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n    };\n\n    // Función para abrir el popup con la descripción del post\n    const openPopup = post => {\n      selectedPost.value = post;\n    };\n\n    // Función para cerrar el popup\n    const closePopup = () => {\n      selectedPost.value = null;\n    };\n\n    // Cargar los posts cuando el componente se monte\n    onMounted(() => {\n      fetchPosts();\n    });\n    const __returned__ = {\n      posts,\n      selectedPost,\n      fetchPosts,\n      openPopup,\n      closePopup,\n      ref,\n      onMounted,\n      get collection() {\n        return collection;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","collection","getDocs","db","posts","selectedPost","fetchPosts","querySnapshot","value","docs","map","doc","data","id","openPopup","post","closePopup"],"sources":["C:/Users/jorda/authfire/src/views/HomePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"posts-container\">\r\n      <div v-for=\"post in posts\" :key=\"post.id\" class=\"post-card\" @click=\"openPopup(post)\">\r\n        <img :src=\"post.imageUrl\" alt=\"Imagen del post\" class=\"post-image\" />\r\n        <h3 class=\"post-title\">{{ post.title }}</h3>\r\n      </div>\r\n  \r\n      <!-- Popup para mostrar la descripción -->\r\n      <div v-if=\"selectedPost\" class=\"popup-overlay\" @click=\"closePopup\">\r\n        <div class=\"popup-content\" @click.stop>\r\n          <h2>{{ selectedPost.title }}</h2>\r\n          <p>{{ selectedPost.description }}</p>\r\n          <button @click=\"closePopup\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  import { collection, getDocs } from \"firebase/firestore\";\r\n  import { db } from '../main.js';\r\n  \r\n  const posts = ref([]);\r\n  const selectedPost = ref(null);\r\n  \r\n  // Función para obtener los posts desde Firestore\r\n  const fetchPosts = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"posts\"));\r\n    posts.value = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n  };\r\n  \r\n  // Función para abrir el popup con la descripción del post\r\n  const openPopup = (post) => {\r\n    selectedPost.value = post;\r\n  };\r\n  \r\n  // Función para cerrar el popup\r\n  const closePopup = () => {\r\n    selectedPost.value = null;\r\n  };\r\n  \r\n  // Cargar los posts cuando el componente se monte\r\n  onMounted(() => {\r\n    fetchPosts();\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .posts-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .post-card {\r\n    width: 200px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .post-image {\r\n    width: 100%;\r\n    height: 150px;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .post-title {\r\n    padding: 10px;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background-color: #f8f8f8;\r\n  }\r\n  \r\n  /* Estilos del popup */\r\n  .popup-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .popup-content {\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    max-width: 400px;\r\n    width: 100%;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n    text-align: center;\r\n  }\r\n  \r\n  .popup-content h2 {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .popup-content p {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .popup-content button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAmBE,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAE/B,MAAMC,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMM,YAAY,GAAGN,GAAG,CAAC,IAAI,CAAC;;IAE9B;IACA,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,aAAa,GAAG,MAAML,OAAO,CAACD,UAAU,CAACE,EAAE,EAAE,OAAO,CAAC,CAAC;MAC5DC,KAAK,CAACI,KAAK,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QAAE,GAAGA,GAAG,CAACC,IAAI,CAAC,CAAC;QAAEC,EAAE,EAAEF,GAAG,CAACE;MAAG,CAAC,CAAC,CAAC;IAC9E,CAAC;;IAED;IACA,MAAMC,SAAS,GAAIC,IAAI,IAAK;MAC1BV,YAAY,CAACG,KAAK,GAAGO,IAAI;IAC3B,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBX,YAAY,CAACG,KAAK,GAAG,IAAI;IAC3B,CAAC;;IAED;IACAR,SAAS,CAAC,MAAM;MACdM,UAAU,CAAC,CAAC;IACd,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}