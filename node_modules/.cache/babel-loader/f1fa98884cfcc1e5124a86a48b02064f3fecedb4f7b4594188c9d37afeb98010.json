{"ast":null,"code":"import _objectSpread from \"C:/Users/maylo/OneDrive/Escritorio/novo-front 1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/maylo/OneDrive/Escritorio/novo-front 1/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/maylo/OneDrive/Escritorio/novo-front 1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nvar BASE_URL = 'http://localhost:8090/api';\nvar axiosInstance = {\n  checkConnection: function checkConnection() {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response, isConnected;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Verificando conexión con el servidor...');\n            _context.next = 4;\n            return fetch(\"\".concat(BASE_URL, \"/health\"), {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n          case 4:\n            response = _context.sent;\n            isConnected = response.ok;\n            console.log('Conexión con el servidor:', isConnected ? 'OK' : 'Fallida');\n            return _context.abrupt(\"return\", isConnected);\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error de conexión:', _context.t0);\n            return _context.abrupt(\"return\", false);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 10]]);\n    }))();\n  },\n  post: function post(url, data) {\n    var _arguments = arguments;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var config, token, headers, response, responseData;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            config = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : {};\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            headers = _objectSpread(_objectSpread({\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }, token && {\n              'Authorization': \"Bearer \".concat(token)\n            }), config.headers);\n            console.log('Enviando petición POST a:', \"\".concat(BASE_URL).concat(url));\n            console.log('Datos:', data);\n            console.log('Headers:', headers);\n            _context2.next = 9;\n            return fetch(\"\".concat(BASE_URL).concat(url), {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(data),\n              credentials: 'include'\n            });\n          case 9:\n            response = _context2.sent;\n            _context2.next = 12;\n            return response.json();\n          case 12:\n            responseData = _context2.sent;\n            console.log('Respuesta del servidor:', responseData);\n            if (response.ok) {\n              _context2.next = 16;\n              break;\n            }\n            throw {\n              response: {\n                data: responseData,\n                status: response.status,\n                statusText: response.statusText\n              }\n            };\n          case 16:\n            return _context2.abrupt(\"return\", responseData);\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('Error en la petición:', _context2.t0);\n            if (_context2.t0.response) {\n              _context2.next = 24;\n              break;\n            }\n            throw new Error('Error de conexión con el servidor');\n          case 24:\n            throw _context2.t0.response.data;\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 19]]);\n    }))();\n  }\n};\nexport default axiosInstance;","map":{"version":3,"names":["BASE_URL","axiosInstance","checkConnection","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","isConnected","wrap","_callee$","_context","prev","next","console","log","fetch","concat","method","headers","sent","ok","abrupt","t0","error","stop","post","url","data","_arguments","arguments","_callee2","config","token","responseData","_callee2$","_context2","length","undefined","localStorage","getItem","_objectSpread","body","JSON","stringify","credentials","json","status","statusText","Error"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/axios.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8090/api'\r\n\r\nconst axiosInstance = {\r\n  async checkConnection() {\r\n    try {\r\n      console.log('Verificando conexión con el servidor...')\r\n      const response = await fetch(`${BASE_URL}/health`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const isConnected = response.ok\r\n      console.log('Conexión con el servidor:', isConnected ? 'OK' : 'Fallida')\r\n      return isConnected\r\n    } catch (error) {\r\n      console.error('Error de conexión:', error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  async post(url, data, config = {}) {\r\n    try {\r\n      const token = localStorage.getItem('token')\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        ...config.headers\r\n      }\r\n\r\n      console.log('Enviando petición POST a:', `${BASE_URL}${url}`)\r\n      console.log('Datos:', data)\r\n      console.log('Headers:', headers)\r\n\r\n      const response = await fetch(`${BASE_URL}${url}`, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(data),\r\n        credentials: 'include'\r\n      })\r\n\r\n      const responseData = await response.json()\r\n      console.log('Respuesta del servidor:', responseData)\r\n      \r\n      if (!response.ok) {\r\n        throw {\r\n          response: {\r\n            data: responseData,\r\n            status: response.status,\r\n            statusText: response.statusText\r\n          }\r\n        }\r\n      }\r\n\r\n      return responseData\r\n    } catch (error) {\r\n      console.error('Error en la petición:', error)\r\n      if (!error.response) {\r\n        throw new Error('Error de conexión con el servidor')\r\n      }\r\n      throw error.response.data\r\n    }\r\n  }\r\n}\r\n\r\nexport default axiosInstance "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}