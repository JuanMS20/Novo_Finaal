{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getFirestore, collection, addDoc, getDocs, query, where } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { app } from '../firebase';\nconst db = getFirestore(app);\nconst storage = getStorage(app);\nexport const productService = {\n  async createProduct(productData, imageFile) {\n    try {\n      let imageUrl = '';\n\n      // Subir imagen si existe\n      if (imageFile) {\n        const storageRef = ref(storage, `products/${Date.now()}_${imageFile.name}`);\n        await uploadBytes(storageRef, imageFile);\n        imageUrl = await getDownloadURL(storageRef);\n      }\n\n      // Crear el producto en Firestore\n      const docRef = await addDoc(collection(db, 'products'), {\n        ...productData,\n        image_url: imageUrl,\n        created_at: new Date(),\n        user_id: productData.userId\n      });\n      return {\n        id: docRef.id,\n        ...productData,\n        image_url: imageUrl\n      };\n    } catch (error) {\n      console.error('Error al crear producto:', error);\n      throw error;\n    }\n  },\n  async getProducts(filters = {}) {\n    try {\n      let q = collection(db, 'products');\n\n      // Aplicar filtros\n      if (filters.category) {\n        q = query(q, where('category', '==', filters.category));\n      }\n      if (filters.condition) {\n        q = query(q, where('condition_state', '==', filters.condition));\n      }\n      const querySnapshot = await getDocs(q);\n      let products = [];\n      querySnapshot.forEach(doc => {\n        products.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n\n      // Filtrar por precio\n      if (filters.minPrice) {\n        products = products.filter(product => parseInt(product.price) >= parseInt(filters.minPrice));\n      }\n      if (filters.maxPrice) {\n        products = products.filter(product => parseInt(product.price) <= parseInt(filters.maxPrice));\n      }\n      return products;\n    } catch (error) {\n      console.error('Error al obtener productos:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["getFirestore","collection","addDoc","getDocs","query","where","getStorage","ref","uploadBytes","getDownloadURL","app","db","storage","productService","createProduct","productData","imageFile","imageUrl","storageRef","Date","now","name","docRef","image_url","created_at","user_id","userId","id","error","console","getProducts","filters","q","category","condition","querySnapshot","products","forEach","doc","push","data","minPrice","filter","product","parseInt","price","maxPrice"],"sources":["C:/Users/maylo/OneDrive/Escritorio/novo-front 1/src/services/products.js"],"sourcesContent":["import { \r\n  getFirestore, \r\n  collection, \r\n  addDoc, \r\n  getDocs,\r\n  query,\r\n  where\r\n} from 'firebase/firestore'\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage'\r\nimport { app } from '../firebase'\r\n\r\nconst db = getFirestore(app)\r\nconst storage = getStorage(app)\r\n\r\nexport const productService = {\r\n  async createProduct(productData, imageFile) {\r\n    try {\r\n      let imageUrl = ''\r\n      \r\n      // Subir imagen si existe\r\n      if (imageFile) {\r\n        const storageRef = ref(storage, `products/${Date.now()}_${imageFile.name}`)\r\n        await uploadBytes(storageRef, imageFile)\r\n        imageUrl = await getDownloadURL(storageRef)\r\n      }\r\n\r\n      // Crear el producto en Firestore\r\n      const docRef = await addDoc(collection(db, 'products'), {\r\n        ...productData,\r\n        image_url: imageUrl,\r\n        created_at: new Date(),\r\n        user_id: productData.userId\r\n      })\r\n\r\n      return {\r\n        id: docRef.id,\r\n        ...productData,\r\n        image_url: imageUrl\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear producto:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async getProducts(filters = {}) {\r\n    try {\r\n      let q = collection(db, 'products')\r\n      \r\n      // Aplicar filtros\r\n      if (filters.category) {\r\n        q = query(q, where('category', '==', filters.category))\r\n      }\r\n      if (filters.condition) {\r\n        q = query(q, where('condition_state', '==', filters.condition))\r\n      }\r\n      \r\n      const querySnapshot = await getDocs(q)\r\n      let products = []\r\n      \r\n      querySnapshot.forEach((doc) => {\r\n        products.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        })\r\n      })\r\n\r\n      // Filtrar por precio\r\n      if (filters.minPrice) {\r\n        products = products.filter(product => \r\n          parseInt(product.price) >= parseInt(filters.minPrice)\r\n        )\r\n      }\r\n      if (filters.maxPrice) {\r\n        products = products.filter(product => \r\n          parseInt(product.price) <= parseInt(filters.maxPrice)\r\n        )\r\n      }\r\n\r\n      return products\r\n    } catch (error) {\r\n      console.error('Error al obtener productos:', error)\r\n      throw error\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}